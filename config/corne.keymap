#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O       &kp P      &kp BACKSPACE
&kp LCTRL   &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K         &kp L       &kp SEMI   &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp PERIOD  &kp SLASH  &kp ESCAPE
                          &kp LEFT_ALT  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LEFT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        RAISE {
            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6          &kp N7          &kp N8            &kp N9           &kp N0  &kp BSPC
&kp LCTRL  &trans  &trans  &trans    &trans  &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW      &kp RIGHT_ARROW  &trans  &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &trans          &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT       &trans  &kp ESC
                           &kp LALT  &trans  &kp SPACE    &kp RETURN      &trans          &kp LGUI
            >;
        };

        LOWER {
            bindings = <
&kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F24
&kp LCTRL  &trans           &trans       &trans    &trans      &trans         &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH          &kp GRAVE
&kp LSHFT  &trans           &trans       &trans    &trans      &trans         &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE               &kp TILDE
                                         &kp LALT  &trans      &kp SPACE      &kp RETURN      &trans         &kp LGUI
            >;
        };

        BOTH {
            bindings = <
&kp F1           &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7      &kp F8      &kp F9    &kp F10        &kp F11  &kp F12
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &kp INSERT  &kp END   &kp PAGE_UP    &trans   &trans
&kp RIGHT_SHIFT  &trans        &trans        &trans        &trans        &trans          &trans      &kp DELETE  &kp HOME  &kp PAGE_DOWN  &trans   &kp ESC
                                             &kp LALT      &trans        &kp SPACE       &kp RETURN  &trans      &kp LGUI
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        BOTH {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
